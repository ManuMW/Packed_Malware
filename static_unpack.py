import sys
import threading
from tempfile import TemporaryDirectory

from unipacker.core import Sample, UnpackerEngine, SimpleClient
from unipacker.utils import RepeatedTimer

from main import *
import unipacker
from unipacker.unpackers import DefaultUnpacker, identifypacker, get_unpacker, \
    AutomaticDefaultUnpacker

file = r'C:\Users\ASUS\Downloads\New_test\packed'


def _unpack(t):
    with TemporaryDirectory() as unpack_dir:
        file = t
        unpacked = f"{unpack_dir}/unpacked.exe"
        sample = Sample(file)
        event = threading.Event()
        client = SimpleClient(event)
        # heartbeat = RepeatedTimer(120, print, "- still running -", file=sys.stderr)

        engine = UnpackerEngine(sample, unpacked)
        engine.register_client(client)
        # heartbeat.start()
        threading.Thread(target=engine.emu).start()
        event.wait()
        # heartbeat.stop()
        engine.stop()
        assert os.path.exists(unpacked)
        assert not os.path.exists(sample.unpacker.dumper.brokenimport_dump_file)
        if os.path.exists(unpacked):
            return file
        else:
            return file

def unipack():
    sample = Sample(file)
    unpack_path = r'C:\Users\ASUS\Downloads\unpacked\unpack.ico'

    engine = UnpackerEngine(sample, unpack_path)
    engine.init_uc()


if __name__ == '__main__':
    _unpack(file)
